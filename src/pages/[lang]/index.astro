---
import Layout from "@components/Layout.astro";
import Pagination from "@components/Pagination.astro";
import PostCard from "@components/PostCard.astro";
import { t } from "@utils/i18n";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  return [
    { params: { lang: "ko" }, props: { lang: "ko" } },
    { params: { lang: "en" }, props: { lang: "en" } },
  ];
}

const { lang } = Astro.props as { lang: "ko" | "en" };
const posts = (await getCollection(lang)).sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
// Pagination (index = page 1)
const PER_PAGE = 12; // keep in sync with /[lang]/page/[page].astro
const page = 1;
const totalPages = Math.ceil(posts.length / PER_PAGE);
const paged = posts.slice(0, PER_PAGE);
const pageHref = (p: number) => (p === 1 ? `/${lang}/` : `/${lang}/page/${p}/`);
---

<Layout
  lang={lang}
  title={`${t("global.brand", lang)} â€” ${lang.toUpperCase()}`}
  description={t("list.description", lang)}
>
  <h1 class="text-2xl font-bold mb-4">{t("list.heading", lang)}</h1>
  <section class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
    {paged.map((p) => <PostCard post={p} />)}
  </section>
  {
    totalPages > 1 && (
      <Pagination
        lang={lang}
        page={page}
        totalPages={totalPages}
        pageHref={pageHref}
      />
    )
  }
</Layout>
